{"meta":{"title":"TurboTu","subtitle":"大道至简，徐徐图之","description":null,"author":"TurboTu","url":"https://turbotu.github.io"},"pages":[{"title":"关于","date":"2018-09-05T14:23:27.000Z","updated":"2018-09-06T02:57:04.436Z","comments":true,"path":"about/index.html","permalink":"https://turbotu.github.io/about/index.html","excerpt":"","text":""},{"title":"留言","date":"2018-09-05T14:20:30.000Z","updated":"2018-09-05T16:21:26.440Z","comments":true,"path":"guestbook/index.html","permalink":"https://turbotu.github.io/guestbook/index.html","excerpt":"","text":"欢迎留言给我 ^-^Mail : xpwoshixp@qq.comGitHub: https://github.com/TurboTu"},{"title":"时间线","date":"2018-09-05T14:32:08.000Z","updated":"2018-09-05T15:42:48.402Z","comments":true,"path":"timeline/index.html","permalink":"https://turbotu.github.io/timeline/index.html","excerpt":"","text":""}],"posts":[{"title":"Jmeter远程性能监控PerfMon以及PerfMonServerAgent安装","slug":"Jmeter远程性能监控PerfMon","date":"2018-09-06T05:23:00.000Z","updated":"2018-09-06T05:49:13.810Z","comments":true,"path":"2018/09/06/Jmeter远程性能监控PerfMon/","link":"","permalink":"https://turbotu.github.io/2018/09/06/Jmeter远程性能监控PerfMon/","excerpt":"1.安装PerfMon先打开PluginManager","text":"1.安装PerfMon先打开PluginManager搜索perfmon点击方框应用选择即可重启后可以在如下位置找到 2.PerfMon Server Agent安装PerfMon Server Agent需要安装在受监控的服务器上，首先下载安装包解压后根据操作系统选择运行startAgent.bat或startAgent.sh即可 3.配置添加jp@gc - PerfMon Metrics Collector后如下图配置启动测试","categories":[{"name":"tech","slug":"tech","permalink":"https://turbotu.github.io/categories/tech/"}],"tags":[{"name":"Jmeter","slug":"Jmeter","permalink":"https://turbotu.github.io/tags/Jmeter/"},{"name":"测试","slug":"测试","permalink":"https://turbotu.github.io/tags/测试/"}],"keywords":[{"name":"tech","slug":"tech","permalink":"https://turbotu.github.io/categories/tech/"}]},{"title":"Mac下制作shell脚本以及双击执行脚本","slug":"Mac下制作shell脚本以及双击执行脚本","date":"2018-09-05T17:21:14.000Z","updated":"2018-09-06T01:50:35.761Z","comments":true,"path":"2018/09/06/Mac下制作shell脚本以及双击执行脚本/","link":"","permalink":"https://turbotu.github.io/2018/09/06/Mac下制作shell脚本以及双击执行脚本/","excerpt":"","text":"1、shell脚本制作以运行Jmeter为例，首先创建一个文本文件，命名为JmeterStartup.sh，打开脚本并按如下格式进行命令编写：‘’ #!bin/bash‘’ #author:xxx(非必填)‘’ #time:xxx(非必填)‘’ 需要执行的命令完成后进行保存，通过#chmod +x JmeterStartup.sh添加执行权限，否则会提示Permission Denied错误。再使用./JmeterStartup.sh即可以执行脚本。 2、脚本双击执行若需要脚本能够双击执行，则只需要将JmeterStartup.sh改名为JmeterStartup.command即可。","categories":[{"name":"tech","slug":"tech","permalink":"https://turbotu.github.io/categories/tech/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"https://turbotu.github.io/tags/Mac/"}],"keywords":[{"name":"tech","slug":"tech","permalink":"https://turbotu.github.io/categories/tech/"}]},{"title":"CentOS7安装Chrome","slug":"CentOS7安装Chrome","date":"2018-09-05T17:03:55.000Z","updated":"2018-09-05T17:19:26.493Z","comments":true,"path":"2018/09/06/CentOS7安装Chrome/","link":"","permalink":"https://turbotu.github.io/2018/09/06/CentOS7安装Chrome/","excerpt":"","text":"CentOS7下很多地方只能安装Chromium，但是Chromium对Flash的支持不是很好，所以使用非常不方便，目前采用了很多方法也无法在Chromium下正常使用Flash。所以经过摸索，找到了一种安装Chrome的方法。 1、下载Chrome浏览器安装包使用rpm安装包，chrome.rpm。 2、下载的安装包使用rpm命令进行安装$rpm -ivh xxx.rpm安装过程可能会提示依赖检测失败，需要/usr/bin/lsb_release。遇到这种情况需要安装redhat-lsb依赖，使用如下命令：#yum -y install redhat-lsb完成此步骤后有可能还会提示缺少libappindicator3.so.1，使用如下命令安装依赖包：#yum install libappindicator-gtk3完成此依赖安装后重新执行rpm安装命令，就可以在系统中看到Chrome浏览器。Chrome本身集成了Flash插件，可以直接使用一个需要Flash的网页进行触发安装。","categories":[{"name":"tech","slug":"tech","permalink":"https://turbotu.github.io/categories/tech/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://turbotu.github.io/tags/CentOS/"}],"keywords":[{"name":"tech","slug":"tech","permalink":"https://turbotu.github.io/categories/tech/"}]},{"title":"Jmeter常见性能指标","slug":"Jmeter常见性能指标","date":"2018-09-05T16:25:12.000Z","updated":"2018-09-05T17:00:18.022Z","comments":true,"path":"2018/09/06/Jmeter常见性能指标/","link":"","permalink":"https://turbotu.github.io/2018/09/06/Jmeter常见性能指标/","excerpt":"","text":"在实际工作中我们经常会对两种架构的软件进行测试：B/S和C/S，它们关注的指标有哪些区别？ 1、对于B/S架构的软件，一般会关注如下Web服务器性能指标： Avg Rps：平均每秒钟的响应次数=总请求次数/秒数； Avg time to last byte per terstion （mstes）:平均每秒业务脚本的迭代次数； Successful Hits：成功的点击次数； Failed Hits：失败的点击次数； Hits Per Second：每秒点击次数； Successful Hits Per Second：每秒成功的点击次数； Failed Hits Per Second：每秒失败的点击次数； Attempted Connections：尝试连接数； Throughput：吞吐率； 2、对于C/S架构的程序，由于软件后台通常为数据库，所以我们更注重数据库的测试指标。 User Connections：用户连接数，也就是数据库的连接数量； Number of Deadlocks：数据库死锁； Butter Cache Hit：数据库Cache的命中情况。 注：在实际性能测试过程中，需要观察的性能指标并不限于以上提到的这些指标，需要根据实际情况作出选择和权衡，有些指标如CPU占用率、内存占用率、数据库连接池等，也有非常重要的参考意义。","categories":[{"name":"tech","slug":"tech","permalink":"https://turbotu.github.io/categories/tech/"}],"tags":[{"name":"Jmeter","slug":"Jmeter","permalink":"https://turbotu.github.io/tags/Jmeter/"},{"name":"测试","slug":"测试","permalink":"https://turbotu.github.io/tags/测试/"}],"keywords":[{"name":"tech","slug":"tech","permalink":"https://turbotu.github.io/categories/tech/"}]}]}